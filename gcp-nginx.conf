# ============================================================================
# RAG 書籍推薦系統 - GCP 優化 Nginx 配置
# 
# 功能：
# - 反向代理到 RAG 應用
# - SSL/HTTPS 支援
# - 效能優化
# - 安全配置
# - 靜態資源快取
# - 健康檢查端點
# 
# 使用方法：
# 1. 複製到 /etc/nginx/sites-available/rag-system
# 2. 建立符號連結到 sites-enabled
# 3. 更新域名設定
# 4. 重載 Nginx 配置
# ============================================================================

# 全域配置
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

# HTTP 配置
http {
    # MIME 類型
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 日誌設定
    access_log /var/log/nginx/access.log main;

    # 效能優化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # 檔案上傳大小限制
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # SSL 配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 安全標頭
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=search:10m rate=5r/s;

    # 上游伺服器配置
    upstream rag-app {
        server rag-app:8081 max_fails=3 fail_timeout=30s;
        # 如果有多個應用實例，可以添加更多伺服器
        # server rag-app-2:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP 伺服器 (重定向到 HTTPS)
    server {
        listen 80;
        server_name _;

        # 健康檢查端點 (允許 HTTP)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Let's Encrypt 驗證
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 其他所有請求重定向到 HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS 伺服器
    server {
        listen 443 ssl http2;
        server_name your-domain.com www.your-domain.com;

        # SSL 憑證 (請更新為實際路徑)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # SSL 優化
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # 根路徑 - 代理到 RAG 應用
        location / {
            proxy_pass http://rag-app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_cache_bypass $http_upgrade;
            
            # 超時設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # 緩衝設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # API 路由 - 特殊處理
        location /api/ {
            # API 請求限制
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://rag-app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API 特定超時 (較長)
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # 禁用緩存
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma no-cache;
            add_header Expires 0;
        }

        # 搜索 API - 特殊限制
        location /api/v2/recommend/search {
            # 搜索請求限制
            limit_req zone=search burst=10 nodelay;
            
            proxy_pass http://rag-app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 搜索超時 (更長)
            proxy_connect_timeout 30s;
            proxy_send_timeout 900s;
            proxy_read_timeout 900s;
        }

        # 健康檢查端點
        location /health {
            access_log off;
            proxy_pass http://rag-app/api/v2/recommend/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # 管理端點 (限制訪問)
        location /actuator/ {
            # 限制只允許本地訪問
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://rag-app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 靜態檔案快取 (如果有)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # 嘗試直接提供，失敗則代理
            try_files $uri @proxy;
        }

        # 代理後備
        location @proxy {
            proxy_pass http://rag-app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 拒絕訪問隱藏檔案
        location ~ /\. {
            deny all;
        }

        # 拒絕訪問敏感檔案
        location ~* \.(env|config|ini|log|sql)$ {
            deny all;
        }

        # 自定義錯誤頁面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
            add_header Content-Type application/json;
        }
        
        location = /50x.html {
            internal;
            return 500 '{"error": "Internal Server Error", "message": "An internal server error occurred"}';
            add_header Content-Type application/json;
        }
    }

    # 開發環境配置 (僅 HTTP，用於測試)
    server {
        listen 8080;
        server_name localhost;

        # 開發環境不進行 rate limiting
        location / {
            proxy_pass http://rag-app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 開發環境超時設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # 開發環境健康檢查
        location /health {
            access_log off;
            proxy_pass http://rag-app/api/v2/recommend/health;
        }
    }
}

# ============================================================================
# 配置指南
# ============================================================================
#
# 1. 安裝此配置:
#    sudo cp gcp-nginx.conf /etc/nginx/nginx.conf
#    sudo nginx -t
#    sudo systemctl reload nginx
#
# 2. 更新域名:
#    將 "your-domain.com" 替換為實際域名
#
# 3. SSL 憑證配置:
#    - 使用 Let's Encrypt:
#      sudo certbot --nginx -d your-domain.com
#    - 或手動配置 SSL 憑證路徑
#
# 4. 防火牆設定:
#    sudo ufw allow 'Nginx Full'
#
# 5. 監控日誌:
#    tail -f /var/log/nginx/access.log
#    tail -f /var/log/nginx/error.log
#
# ============================================================================