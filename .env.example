# RAG 書籍推薦系統 - 環境變量配置範例
# 複製此文件為 .env 並填入實際值

# ==============================================
# API 配置
# ==============================================

# Gemini API Key (用於智能查詢分析，可選)
# 獲取方式: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=

# ==============================================
# 服務端點配置
# ==============================================

# Qdrant 向量數據庫配置
QDRANT_HOST=qdrant
QDRANT_PORT=6333

# Ollama AI 服務配置
OLLAMA_BASE_URL=http://ollama:11434

# ==============================================
# 應用配置
# ==============================================

# Spring 環境配置
SPRING_PROFILES_ACTIVE=docker

# 應用端口
APP_PORT=8081

# ==============================================
# JVM 性能配置
# ==============================================

# JVM 記憶體設定 (根據服務器配置調整)
# 4GB 記憶體系統建議
JAVA_OPTS=-Xmx3g -Xms1g -XX:+UseG1GC -XX:MaxGCPauseMillis=200

# 8GB 記憶體系統建議  
# JAVA_OPTS=-Xmx6g -Xms2g -XX:+UseG1GC -XX:MaxGCPauseMillis=100

# 16GB 記憶體系統建議
# JAVA_OPTS=-Xmx12g -Xms4g -XX:+UseG1GC -XX:MaxGCPauseMillis=50

# ==============================================
# 網路和安全配置  
# ==============================================

# CORS 配置 (生產環境請設定具體域名)
ALLOWED_ORIGINS=*
CORS_ENABLED=true

# 管理端點配置 (生產環境建議限制暴露)
MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics

# ==============================================
# 數據庫配置
# ==============================================

# Qdrant 集合配置
QDRANT_TAGS_COLLECTION=tags_vecs
QDRANT_DESC_COLLECTION=desc_vecs
QDRANT_VECTOR_SIZE=1024

# ==============================================
# 快取和性能配置
# ==============================================

# Embedding 快取配置
CACHE_EMBEDDINGS_MAX_SIZE=50000
CACHE_EMBEDDINGS_EXPIRE_AFTER_WRITE=12h

# 批處理配置
BATCH_SIZE=100
BATCH_PARALLEL_WORKERS=2

# ==============================================
# 日誌配置
# ==============================================

# 日誌等級
LOG_LEVEL_ROOT=INFO
LOG_LEVEL_APP=INFO

# 日誌文件配置
LOG_FILE_NAME=logs/rag-app.log
LOG_FILE_MAX_SIZE=100MB
LOG_FILE_MAX_HISTORY=7

# ==============================================
# 健康檢查配置
# ==============================================

HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_TIMEOUT_SECONDS=30
HEALTH_CHECK_PERFORMANCE_TESTS=false

# ==============================================
# Docker 特殊配置
# ==============================================

# 容器時區設定
TZ=Asia/Taipei

# Docker 網路配置
DOCKER_NETWORK_SUBNET=172.20.0.0/16

# ==============================================
# 生產環境額外配置
# ==============================================

# 反向代理配置 (如使用 Nginx)
# PROXY_READ_TIMEOUT=300s
# PROXY_CONNECT_TIMEOUT=30s

# SSL/TLS 配置 (如啟用 HTTPS)
# SSL_ENABLED=true
# SSL_CERTIFICATE_PATH=/etc/nginx/ssl/cert.pem
# SSL_CERTIFICATE_KEY_PATH=/etc/nginx/ssl/key.pem

# 監控配置
# MONITORING_ENABLED=false
# PROMETHEUS_ENDPOINT=http://prometheus:9090